spring:
  application:
    name: GreatMingWeb
  #jpa:
  #  hibernate:
  #    naming:
  #      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  # use config for jpa2 default
  jpa:
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: true
  datasource:
    url: jdbc:p6spy:mariadb://localhost:3306/GreatMing?characterEncoding=utf-8
    # set database username at here
    username: greatming
    # set password at here
    password: greatming
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver

  # mybatis auto underscore
  #mybatis:
  #  configuration:
  #    map-underscore-to-camel-case: true

  # DEBUG
  logging:
    level:
      com:
        Web:
          GreatMing:
            mapper: DEBUG
      org:
        mybatis: DEBUG
        #mybatis.spring: TRACE

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

  data:
    redis:
      host: localhost
      port: 6379

  cache:
    type: redis
    redis:
      time-to-live: 10m
      key-prefix: "GreatMing::CACHE::"
      use-key-prefix: true

server:
  port: 8080

# minio
minio:
  endpoint: http://localhost:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucket-name: greatming

# mybatis auto scan mapper
#mybatis:
#  mapper-locations: classpath*:/mapper/*Mapper.xml

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: auto

decorator:
  datasource:
    p6spy:
      log-format: "\ntime:%(executionTime) || sql:%(sql)\n"
      logging: slf4j
#      custom-appender-class: com.Web.GreatMing.exception.StdoutLogger

# custom config
custom:
  jwt:
    encrypt:
      key: greatming

# alioss or minio
oss:
  type: alioss
  # AliOSS
  access:
    key:
      id:
      secret:
      bucketname:
    endpoint:
    region: